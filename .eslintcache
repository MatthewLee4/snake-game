[{"/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/index.js":"1","/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/App.js":"2","/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/reportWebVitals.js":"3","/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/components/Snake.js":"4","/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/components/Food.js":"5"},{"size":500,"mtime":1611705394969,"results":"6","hashOfConfig":"7"},{"size":3164,"mtime":1611712908130,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611705394970,"results":"9","hashOfConfig":"7"},{"size":417,"mtime":1611710309716,"results":"10","hashOfConfig":"7"},{"size":227,"mtime":1611710473400,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mlhvci",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/index.js",[],["26","27"],"/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/App.js",["28","29","30","31"],"import React, { Component } from 'react';\nimport Snake from './components/Snake';\nimport Food from './components/Food';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 200, \n  direction: 'RIGHT',\n  snakeDots: [\n    [0, 0],\n    [2, 0]\n  ]\n}\n\nclass App extends Component {\n\n  state = initialState;\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  } \n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 38:\n        this.setState({direction: 'UP'});\n        break;\n      case 40:\n        this.setState({direction: 'DOWN'});\n        break;\n      case 37:\n        this.setState({direction: 'LEFT'});\n        break;\n      case 39:\n        this.setState({direction: 'RIGHT'});\n        break;\n      default:\n        return this.state;\n    }\n  }\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length -1];\n\n    switch (this.state.direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n        break;\n      default: \n      return this.state.direction;\n    }\n    dots.push(head); //adds head as snake moves\n    dots.shift(); //removes tail as snake moves\n    this.setState({\n      snakeDots: dots\n    })\n  }\n\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] <0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.onGameOver();\n      }\n    })\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] == food[0] && head[1] == food[1]) {\n      this.setState({\n        food: getRandomCoordinates()\n      })\n      this.enlargeSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 50) {\n      this.setState({\n        speed:this.state.speed + 50\n      })\n    }\n  }\n\n  onGameOver() {\n    alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\n    this.setState(initialState)\n  }\n\n  render() {\n    return (\n    <div className=\"game-area\">\n      <Snake snakeDots={this.state.snakeDots}/>\n      <Food dot={this.state.food}/>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/reportWebVitals.js",[],"/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/components/Snake.js",["32"],"import React from 'react';\n\nexport default (props) => {\n    return (\n        <div>\n            {props.snakeDots.map((dot, i) => {\n                const style = {\n                    left: `${dot[0]}%`,\n                    top: `${dot[1]}%`\n                }\n                return (\n                    <div className=\"snake-dot\" key={i} style={style}></div>\n                )\n            })}\n        </div>\n    )\n}\n\n","/Users/matthew/Desktop/DigitalCrafts/Week 20/snake-game/src/components/Food.js",["33"],"import React from 'react';\n\nexport default (props) => {\n\n    const style = {\n        left: `${props.dot[0]}%`,\n        top: `${props.dot[1]}%`\n    }\n\n    return (\n        <div className=\"snake-food\" style={style}></div>\n    )\n}",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":98,"column":19,"nodeType":"40","messageId":"41","endLine":98,"endColumn":21},{"ruleId":"38","severity":1,"message":"39","line":98,"column":40,"nodeType":"40","messageId":"41","endLine":98,"endColumn":42},{"ruleId":"38","severity":1,"message":"39","line":107,"column":17,"nodeType":"40","messageId":"41","endLine":107,"endColumn":19},{"ruleId":"38","severity":1,"message":"39","line":107,"column":39,"nodeType":"40","messageId":"41","endLine":107,"endColumn":41},{"ruleId":"42","severity":1,"message":"43","line":3,"column":1,"nodeType":"44","endLine":17,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":3,"column":1,"nodeType":"44","endLine":13,"endColumn":2},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]